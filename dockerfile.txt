 #Pré requis :
 #Installer docker sur une machine linux
 #Créer ce Dockerfile dans les sources de la solution 
 #Le nommer Dockerfile sans extensions
 #Editer le fichier crontab pour la solution
 
 #image de base net core
 FROM microsoft/aspnetcore
 
 #infos sur le propriètaire du container
 MAINTAINER gamelinfabien@gmail.com
 
 #emplacement du container
 WORKDIR /app
 
 #copie du projet dans le container
 COPY /Candidate-Management
 
 #cmd dotnet vérifiant les packages
 RUN dotnet restore
 #set le port 5000 pour les APIs
 EXPOSE 5000
 #Build la solution dotnet (http://kalapos.net/Blog/ShowPost/csproj-settings-in-aspnet-core)
 RUN dotnet publish --framework netcoreapp1.1 Candidate-Management/src/Candidate-Management/Candidate-Management -o /Candidate-Management/publish
 
 #ajouter le fichier crontab au container
 ADD /etc/crontab /app/Candidate-Management 
 #commandes crontab
 RUN crontab /app/Candidate-Management/crontab
 ADD files/bin/start-cron.sh /usr/bin/start-cron.sstart-cron.s 
 RUN chmod +x /usr/bin/start-cron.sh
 RUN touch /var/log/cron.log
 
 #commandes à éxecuter lorsdu démarrage du container
 ENTRYPOINT["dotnet", "publish/Candidate-Management.dll"]
 
 #La suite :
 #En console à l'emplacement du container
 #Build le dockerfile pour créer son image :
 #docker build -t app/Candidate-Management .
 #Run l'image dans un container :
 #docker run -p 5000:80 --name Candidate-Management app/CandidateManagement
